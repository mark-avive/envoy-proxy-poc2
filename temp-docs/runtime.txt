Runtime
Upstream clusters support the following runtime settings:

Active health checking
health_check.min_interval
Min value for the health checking interval. Default value is 1 ms. The effective health check interval will be no less than 1ms. The health checking interval will be between min_interval and max_interval.

health_check.max_interval
Max value for the health checking interval. Default value is MAX_INT. The effective health check interval will be no less than 1ms. The health checking interval will be between min_interval and max_interval.

health_check.verify_cluster
What % of health check requests will be verified against the expected upstream service as the health check filter will write the remote service cluster into the response.

Outlier detection
See the outlier detection architecture overview for more information on outlier detection. The runtime parameters supported by outlier detection are the same as the static configuration parameters, namely:

outlier_detection.consecutive_5xx
consecutive_5XX setting in outlier detection

outlier_detection.consecutive_gateway_failure
consecutive_gateway_failure setting in outlier detection

outlier_detection.consecutive_local_origin_failure
consecutive_local_origin_failure setting in outlier detection

outlier_detection.interval_ms
interval setting in outlier detection

outlier_detection.base_ejection_time_ms
base_ejection_time setting in outlier detection

outlier_detection.max_ejection_percent
max_ejection_percent setting in outlier detection

outlier_detection.enforcing_consecutive_5xx
enforcing_consecutive_5xx setting in outlier detection

outlier_detection.enforcing_consecutive_gateway_failure
enforcing_consecutive_gateway_failure setting in outlier detection

outlier_detection.enforcing_consecutive_local_origin_failure
enforcing_consecutive_local_origin_failure setting in outlier detection

outlier_detection.enforcing_success_rate
enforcing_success_rate setting in outlier detection

outlier_detection.enforcing_local_origin_success_rate
enforcing_local_origin_success_rate setting in outlier detection

outlier_detection.success_rate_minimum_hosts
success_rate_minimum_hosts setting in outlier detection

outlier_detection.success_rate_request_volume
success_rate_request_volume setting in outlier detection

outlier_detection.success_rate_stdev_factor
success_rate_stdev_factor setting in outlier detection

outlier_detection.enforcing_failure_percentage
enforcing_failure_percentage setting in outlier detection

outlier_detection.enforcing_failure_percentage_local_origin
enforcing_failure_percentage_local_origin setting in outlier detection

outlier_detection.failure_percentage_request_volume
failure_percentage_request_volume setting in outlier detection

outlier_detection.failure_percentage_minimum_hosts
failure_percentage_minimum_hosts setting in outlier detection

outlier_detection.failure_percentage_threshold
failure_percentage_threshold setting in outlier detection

outlier_detection.max_ejection_time_ms
max_ejection_time setting in outlier detection

outlier_detection.max_ejection_time_jitter_ms
base_ejection_time setting in outlier detection

Core
upstream.healthy_panic_threshold
Sets the panic threshold percentage. Defaults to 50%.

upstream.use_http2
Whether the cluster uses HTTP/2 if configured in HttpProtocolOptions. Set to 0 to disable HTTP/2 even if the feature is configured. Defaults to enabled.

upstream.use_http3
Whether the cluster uses HTTP/3 if configured in HttpProtocolOptions. Set to 0 to disable HTTP/3 even if the feature is configured. Defaults to enabled.

Zone aware load balancing
upstream.zone_routing.enabled
% of requests that will be routed to the same upstream zone. Defaults to 100% of requests.

upstream.zone_routing.min_cluster_size
Minimal size of the upstream cluster for which zone aware routing can be attempted. Default value is 6. If the upstream cluster size is smaller than min_cluster_size zone aware routing will not be performed.

upstream.zone_routing.force_local_zone.min_size
Enables force_local_zone and configures the minimum number of the upstream hosts in the local zone for force_local_zone to be respected. If the upstream zone size is smaller than force_local_zone_min_size routing logic falls back to default zone aware routing behavior.

Circuit breaking
circuit_breakers.<cluster_name>.<priority>.max_connections
Max connections circuit breaker setting

circuit_breakers.<cluster_name>.<priority>.max_pending_requests
Max pending requests circuit breaker setting

circuit_breakers.<cluster_name>.<priority>.max_requests
Max requests circuit breaker setting

circuit_breakers.<cluster_name>.<priority>.max_retries
Max retries circuit breaker setting

circuit_breakers.<cluster_name>.<priority>.retry_budget.budget_percent
Max retries circuit breaker setting

circuit_breakers.<cluster_name>.<priority>.retry_budget.min_retry_concurrency
Max retries circuit breaker setting
